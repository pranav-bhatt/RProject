# if(rdata1$PM10.Quality[i] == "--")
#  rdata1$PM10.Quality[i]<-"NA"
dfoxy<-as.data.frame(rdata1[,c(5,6,7)])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfnitro<-as.data.frame(rdata1[,10])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfpm<-as.data.frame(rdata1[,c(11,12,13)])
rdata1[,c(11,12,13)]<-dfoxy%>%do(na.locf(.))
rdata1$Latitude<-as.numeric(rdata1$Latitude)
typeof(rdata1$Latitude)
for (i in seq(1,5744))
if(rdata1$Latitude[i] > 42)
rdata1$Latitude[i]=rdata1$Latitude[i]/10000
setwd("C:/Users/anushkadwivedi/Desktop/R PROJECT")
rdata=read.csv("dataset.csv")
rdata1=as.data.frame(rdata)
View(rdata)
View(rdata1)
class(rdata1)
library(zoo)
library(tidyr)
library(dplyr)
#for (i in seq(1,5744))
# if(rdata1$Air.Quality[i] == "--")
#  rdata1$Air.Quality[i]<-TRUE
#for (i in seq(1,5744))
#if(rdata1$O3.Quality[i] == "--")
# rdata1$O3.Quality[i]<-"NA"
#for (i in seq(1,5744))
#if(rdata1$NO2.Quality[i] == "--")
# rdata1$NO2.Quality[i]<-TRUE
#for (i in seq(1,5744))
# if(rdata1$PM10.Quality[i] == "--")
#  rdata1$PM10.Quality[i]<-"NA"
rdata1$NO2.Quality[rdata1$NO2.Quality=="--"]<-NA
dfoxy<-as.data.frame(rdata1[,c(5,6,7)])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfnitro<-as.data.frame(rdata1[,10])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfpm<-as.data.frame(rdata1[,c(11,12,13)])
rdata1[,c(11,12,13)]<-dfoxy%>%do(na.locf(.))
rdata1$Latitude<-as.numeric(rdata1$Latitude)
typeof(rdata1$Latitude)
for (i in seq(1,5744))
if(rdata1$Latitude[i] > 42)
rdata1$Latitude[i]=rdata1$Latitude[i]/10000
setwd("C:/Users/anushkadwivedi/Desktop/R PROJECT")
rdata=read.csv("dataset.csv")
rdata1=as.data.frame(rdata)
View(rdata)
View(rdata1)
class(rdata1)
library(zoo)
library(tidyr)
library(dplyr)
#for (i in seq(1,5744))
# if(rdata1$Air.Quality[i] == "--")
#  rdata1$Air.Quality[i]<-TRUE
#for (i in seq(1,5744))
#if(rdata1$O3.Quality[i] == "--")
# rdata1$O3.Quality[i]<-"NA"
#for (i in seq(1,5744))
#if(rdata1$NO2.Quality[i] == "--")
# rdata1$NO2.Quality[i]<-TRUE
#for (i in seq(1,5744))
# if(rdata1$PM10.Quality[i] == "--")
#  rdata1$PM10.Quality[i]<-"NA"
rdata1$NO2.Quality[rdata1$NO2.Quality=="--"]<-NA
rdata1$O3.Quality[rdata1$O3.Quality=="--"]<-NA
rdata1$PM10.Quality[rdata1$PM10.Quality=="--"]<-NA
rdata1$Air.Quality[rdata1$Air.Quality=="--"]<-NA
dfoxy<-as.data.frame(rdata1[,c(5,6,7)])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfnitro<-as.data.frame(rdata1[,10])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfpm<-as.data.frame(rdata1[,c(11,12,13)])
rdata1[,c(11,12,13)]<-dfoxy%>%do(na.locf(.))
rdata1$Latitude<-as.numeric(rdata1$Latitude)
typeof(rdata1$Latitude)
for (i in seq(1,5744))
if(rdata1$Latitude[i] > 42)
rdata1$Latitude[i]=rdata1$Latitude[i]/10000
setwd("C:/Users/anushkadwivedi/Desktop/R PROJECT")
rdata=read.csv("dataset.csv")
rdata1=as.data.frame(rdata)
View(rdata)
View(rdata1)
class(rdata1)
library(zoo)
library(tidyr)
library(dplyr)
#for (i in seq(1,5744))
# if(rdata1$Air.Quality[i] == "--")
#  rdata1$Air.Quality[i]<-TRUE
#for (i in seq(1,5744))
#if(rdata1$O3.Quality[i] == "--")
# rdata1$O3.Quality[i]<-"NA"
#for (i in seq(1,5744))
#if(rdata1$NO2.Quality[i] == "--")
# rdata1$NO2.Quality[i]<-TRUE
#for (i in seq(1,5744))
# if(rdata1$PM10.Quality[i] == "--")
#  rdata1$PM10.Quality[i]<-"NA"
rdata1$NO2.Quality[rdata1$NO2.Quality=="--"]<-NA
rdata1$O3.Quality[rdata1$O3.Quality=="--"]<-NA
rdata1$PM10.Quality[rdata1$PM10.Quality=="--"]<-NA
rdata1$Air.Quality[rdata1$Air.Quality=="--"]<-NA
dfair<-as.data.frame(rdata1[,2])
rdata1[,2]<-dfair%>%do(na.locf(.))
dfoxy<-as.data.frame(rdata1[,c(5,6,7)])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfnitro<-as.data.frame(rdata1[,10])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfpm<-as.data.frame(rdata1[,c(11,12,13)])
rdata1[,c(11,12,13)]<-dfoxy%>%do(na.locf(.))
rdata1$Latitude<-as.numeric(rdata1$Latitude)
typeof(rdata1$Latitude)
for (i in seq(1,5744))
if(rdata1$Latitude[i] > 42)
rdata1$Latitude[i]=rdata1$Latitude[i]/10000
setwd("C:/Users/anushkadwivedi/Desktop/R PROJECT")
rdata=read.csv("dataset.csv")
rdata1=as.data.frame(rdata)
View(rdata)
View(rdata1)
class(rdata1)
library(zoo)
library(tidyr)
library(dplyr)
#for (i in seq(1,5744))
# if(rdata1$Air.Quality[i] == "--")
#  rdata1$Air.Quality[i]<-TRUE
#for (i in seq(1,5744))
#if(rdata1$O3.Quality[i] == "--")
# rdata1$O3.Quality[i]<-"NA"
#for (i in seq(1,5744))
#if(rdata1$NO2.Quality[i] == "--")
# rdata1$NO2.Quality[i]<-TRUE
#for (i in seq(1,5744))
# if(rdata1$PM10.Quality[i] == "--")
#  rdata1$PM10.Quality[i]<-"NA"
rdata1$NO2.Quality[rdata1$NO2.Quality=="--"]<-NA
rdata1$O3.Quality[rdata1$O3.Quality=="--"]<-NA
rdata1$PM10.Quality[rdata1$PM10.Quality=="--"]<-NA
rdata1$Air.Quality[rdata1$Air.Quality=="--"]<-NA
dfair<-as.data.frame(rdata1[,2])
rdata1[,2]<-dfair%>%do(na.locf(.))
dfoxy<-as.data.frame(rdata1[,c(5,6,7)])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfnitro<-as.data.frame(rdata1[,10])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfpm<-as.data.frame(rdata1[,c(11,12,13)])
rdata1[,c(11,12,13)]<-dfoxy%>%do(na.locf(.))
rdata1$Latitude<-as.numeric(rdata1$Latitude)
for (i in seq(1,5744))
if(rdata1$Latitude[i] > 42)
rdata1$Latitude[i]=rdata1$Latitude[i]/10000
setwd("C:/Users/anushkadwivedi/Desktop/R PROJECT")
rdata=read.csv("dataset.csv")
rdata1=as.data.frame(rdata)
View(rdata)
View(rdata1)
class(rdata1)
library(zoo)
library(tidyr)
library(dplyr)
#for (i in seq(1,5744))
# if(rdata1$Air.Quality[i] == "--")
#  rdata1$Air.Quality[i]<-TRUE
#for (i in seq(1,5744))
#if(rdata1$O3.Quality[i] == "--")
# rdata1$O3.Quality[i]<-"NA"
#for (i in seq(1,5744))
#if(rdata1$NO2.Quality[i] == "--")
# rdata1$NO2.Quality[i]<-TRUE
#for (i in seq(1,5744))
# if(rdata1$PM10.Quality[i] == "--")
#  rdata1$PM10.Quality[i]<-"NA"
rdata1$NO2.Quality[rdata1$NO2.Quality=="--"]<-NA
rdata1$O3.Quality[rdata1$O3.Quality=="--"]<-NA
rdata1$PM10.Quality[rdata1$PM10.Quality=="--"]<-NA
rdata1$Air.Quality[rdata1$Air.Quality=="--"]<-NA
dfair<-as.data.frame(rdata1[,2])
rdata1[,2]<-dfair%>%do(na.locf(.))
dfoxy<-as.data.frame(rdata1[,c(5,6,7)])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfnitro<-as.data.frame(rdata1[,10])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfpm<-as.data.frame(rdata1[,c(11,12,13)])
rdata1[,c(11,12,13)]<-dfoxy%>%do(na.locf(.))
rdata1$Latitude<-as.numeric(rdata1$Latitude)
for (i in seq(1,5744))
if(rdata1$Latitude[i] > 42)
rdata1$Latitude[i]=rdata1$Latitude[i]/10000
mx = max(rdata1$PM10.Value, na.rm=TRUE)
print(mx)
setwd("C:/Users/anushkadwivedi/Desktop/R PROJECT")
rdata=read.csv("dataset.csv")
rdata1=as.data.frame(rdata)
View(rdata)
View(rdata1)
class(rdata1)
library(zoo)
library(tidyr)
library(dplyr)
#for (i in seq(1,5744))
# if(rdata1$Air.Quality[i] == "--")
#  rdata1$Air.Quality[i]<-TRUE
#for (i in seq(1,5744))
#if(rdata1$O3.Quality[i] == "--")
# rdata1$O3.Quality[i]<-"NA"
#for (i in seq(1,5744))
#if(rdata1$NO2.Quality[i] == "--")
# rdata1$NO2.Quality[i]<-TRUE
#for (i in seq(1,5744))
# if(rdata1$PM10.Quality[i] == "--")
#  rdata1$PM10.Quality[i]<-"NA"
rdata1$NO2.Quality[rdata1$NO2.Quality=="--"]<-NA
rdata1$O3.Quality[rdata1$O3.Quality=="--"]<-NA
rdata1$PM10.Quality[rdata1$PM10.Quality=="--"]<-NA
rdata1$Air.Quality[rdata1$Air.Quality=="--"]<-NA
dfair<-as.data.frame(rdata1[,2])
rdata1[,2]<-dfair%>%do(na.locf(.))
dfoxy<-as.data.frame(rdata1[,c(5,6,7)])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfnitro<-as.data.frame(rdata1[,10])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfpm<-as.data.frame(rdata1[,c(11,12,13)])
rdata1[,c(11,12,13)]<-dfoxy%>%do(na.locf(.))
rdata1$Latitude<-as.numeric(rdata1$Latitude)
for (i in seq(1,5744))
if(rdata1$Latitude[i] > 42)
rdata1$Latitude[i]=rdata1$Latitude[i]/10000
mx = max(rdata1$PM10.Value, na.rm=TRUE)
print(mx)
mn = min(rdata1$PM10.Value, na.rm=TRUE)
print(mn)
for (i in seq(1,5744))
rdata1$PM10.Value[i]=round((rdata1$PM10.Value[i]-mn)/(mx-mn),digits=3)
setwd("C:/Users/anushkadwivedi/Desktop/R PROJECT")
rdata=read.csv("dataset.csv")
rdata1=as.data.frame(rdata)
View(rdata)
View(rdata1)
class(rdata1)
library(zoo)
library(tidyr)
library(dplyr)
#for (i in seq(1,5744))
# if(rdata1$Air.Quality[i] == "--")
#  rdata1$Air.Quality[i]<-TRUE
#for (i in seq(1,5744))
#if(rdata1$O3.Quality[i] == "--")
# rdata1$O3.Quality[i]<-"NA"
#for (i in seq(1,5744))
#if(rdata1$NO2.Quality[i] == "--")
# rdata1$NO2.Quality[i]<-TRUE
#for (i in seq(1,5744))
# if(rdata1$PM10.Quality[i] == "--")
#  rdata1$PM10.Quality[i]<-"NA"
# Repacing all the blank values with NA
rdata1$NO2.Quality[rdata1$NO2.Quality=="--"]<-NA
rdata1$O3.Quality[rdata1$O3.Quality=="--"]<-NA
rdata1$PM10.Quality[rdata1$PM10.Quality=="--"]<-NA
rdata1$Air.Quality[rdata1$Air.Quality=="--"]<-NA
# Replacing all the NA values with the previous value
dfair<-as.data.frame(rdata1[,2])
rdata1[,2]<-dfair%>%do(na.locf(.))
dfoxy<-as.data.frame(rdata1[,c(5,6,7)])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfnitro<-as.data.frame(rdata1[,10])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfpm<-as.data.frame(rdata1[,c(11,12,13)])
rdata1[,c(11,12,13)]<-dfoxy%>%do(na.locf(.))
rdata1$Latitude<-as.numeric(rdata1$Latitude)
# correcting the outliers in latitude column
for (i in seq(1,5744))
if(rdata1$Latitude[i] > 42)
rdata1$Latitude[i]=rdata1$Latitude[i]/10000
# normalizing the PM10.Value column
mx = max(rdata1$PM10.Value, na.rm=TRUE)
print(mx)
mn = min(rdata1$PM10.Value, na.rm=TRUE)
print(mn)
for (i in seq(1,5744))
rdata1$PM10.Value[i]=round((rdata1$PM10.Value[i]-mn)/(mx-mn),digits=3)
rdata1 = spread(rdata1,Station,Date.Time)
View(rdata1)
setwd("C:/Users/anushkadwivedi/Desktop/R PROJECT")
rdata=read.csv("dataset.csv")
rdata1=as.data.frame(rdata)
View(rdata)
View(rdata1)
class(rdata1)
library(zoo)
library(tidyr)
library(dplyr)
#for (i in seq(1,5744))+
# if(rdata1$Air.Quality[i] == "--")
#  rdata1$Air.Quality[i]<-TRUE
#for (i in seq(1,5744))
#if(rdata1$O3.Quality[i] == "--")
# rdata1$O3.Quality[i]<-"NA"
#for (i in seq(1,5744))
#if(rdata1$NO2.Quality[i] == "--")
# rdata1$NO2.Quality[i]<-TRUE
#for (i in seq(1,5744))
# if(rdata1$PM10.Quality[i] == "--")
#  rdata1$PM10.Quality[i]<-"NA"
# Repacing all the blank values with NA
rdata1$NO2.Quality[rdata1$NO2.Quality=="--"]<-NA
rdata1$O3.Quality[rdata1$O3.Quality=="--"]<-NA
rdata1$PM10.Quality[rdata1$PM10.Quality=="--"]<-NA
rdata1$Air.Quality[rdata1$Air.Quality=="--"]<-NA
# Replacing all the NA values with the previous value
dfair<-as.data.frame(rdata1[,2])
rdata1[,2]<-dfair%>%do(na.locf(.))
dfoxy<-as.data.frame(rdata1[,c(5,6,7)])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfnitro<-as.data.frame(rdata1[,10])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfpm<-as.data.frame(rdata1[,c(11,12,13)])
rdata1[,c(11,12,13)]<-dfoxy%>%do(na.locf(.))
rdata1$Latitude<-as.numeric(rdata1$Latitude)
# correcting the outliers in latitude column
for (i in seq(1,5744))
if(rdata1$Latitude[i] > 42)
rdata1$Latitude[i]=rdata1$Latitude[i]/10000
# normalizing the PM10.Value column
mx = max(rdata1$PM10.Value, na.rm=TRUE)
print(mx)
mn = min(rdata1$PM10.Value, na.rm=TRUE)
print(mn)
for (i in seq(1,5744))
rdata1$PM10.Value[i]=round((rdata1$PM10.Value[i]-mn)/(mx-mn),digits=3)
rdata1 = spread(rdata1,Station,Generated)
View(rdata1)
setwd("C:/Users/anushkadwivedi/Desktop/R PROJECT")
rdata=read.csv("dataset.csv")
rdata1=as.data.frame(rdata)
View(rdata)
View(rdata1)
class(rdata1)
library(zoo)
library(tidyr)
library(dplyr)
#for (i in seq(1,5744))+
# if(rdata1$Air.Quality[i] == "--")
#  rdata1$Air.Quality[i]<-TRUE
#for (i in seq(1,5744))
#if(rdata1$O3.Quality[i] == "--")
# rdata1$O3.Quality[i]<-"NA"
#for (i in seq(1,5744))
#if(rdata1$NO2.Quality[i] == "--")
# rdata1$NO2.Quality[i]<-TRUE
#for (i in seq(1,5744))
# if(rdata1$PM10.Quality[i] == "--")
#  rdata1$PM10.Quality[i]<-"NA"
# Repacing all the blank values with NA
rdata1$NO2.Quality[rdata1$NO2.Quality=="--"]<-NA
rdata1$O3.Quality[rdata1$O3.Quality=="--"]<-NA
rdata1$PM10.Quality[rdata1$PM10.Quality=="--"]<-NA
rdata1$Air.Quality[rdata1$Air.Quality=="--"]<-NA
# Replacing all the NA values with the previous value
dfair<-as.data.frame(rdata1[,2])
rdata1[,2]<-dfair%>%do(na.locf(.))
dfoxy<-as.data.frame(rdata1[,c(5,6,7)])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfnitro<-as.data.frame(rdata1[,10])
rdata1[,c(5,6,7)]<-dfoxy%>%do(na.locf(.))
dfpm<-as.data.frame(rdata1[,c(11,12,13)])
rdata1[,c(11,12,13)]<-dfoxy%>%do(na.locf(.))
rdata1$Latitude<-as.numeric(rdata1$Latitude)
# correcting the outliers in latitude column
for (i in seq(1,5744))
if(rdata1$Latitude[i] > 42)
rdata1$Latitude[i]=rdata1$Latitude[i]/10000
# normalizing the PM10.Value column
mx = max(rdata1$PM10.Value, na.rm=TRUE)
print(mx)
mn = min(rdata1$PM10.Value, na.rm=TRUE)
print(mn)
for (i in seq(1,5744))
rdata1$PM10.Value[i]=round((rdata1$PM10.Value[i]-mn)/(mx-mn),digits=3)
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
View(NO2)
?seq
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
lol
awd
quit
quit()
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
View(a)
source('~/Projects/College Assignments/RProject/rproject.R')
?rbind
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
View(a)
View(a)
source('~/Projects/College Assignments/RProject/rproject.R')
View(a)
View(a)
source('~/Projects/College Assignments/RProject/rproject.R')
View(a)
source('~/Projects/College Assignments/RProject/rproject.R')
View(a)
View(a)
View(a)
View(a)
source('~/Projects/College Assignments/RProject/rproject.R')
View(a)
View(a)
View(a)
source('~/Projects/College Assignments/RProject/rproject.R', echo=TRUE)
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
View(a)
View(a)
source('~/Projects/College Assignments/RProject/rproject.R')
View(a)
View(a)
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
View(a)
View(a)
colnames(a)=c("Station","Latitude","Longitude","NO2","O3","PM10","Time")
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
View(a)
View(a)
devtools::install_github("AckerDWM/gg3D")
devtools::install_github("AckerDWM/gg3D")
install.packages("plotly")
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
View(a)
View(a)
View(b)
View(b)
View(a1)
View(a1)
source('~/Projects/College Assignments/RProject/rproject.R')
View(final)
View(final)
source('~/Projects/College Assignments/RProject/rproject.R')
View(final)
View(final)
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
View(final)
View(final)
source('~/Projects/College Assignments/RProject/rproject.R')
View(final)
View(final)
View(final)
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
install.packages("Rcpp")
install.packages("Rcpp")
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
pie = pie(final$O3Q)
print(pie)
source('~/Projects/College Assignments/RProject/rproject.R')
source('~/Projects/College Assignments/RProject/rproject.R')
print(pie)
View(final)
View(final)
View(dfpm2)
View(a)
View(a)
for(i in seq(1,5744,8)){
rbind(a,c(rdata1$Station[i],rdata1$Latitude[i],rdata1$Longitude[i],rdata1$NO2.Value[i],rdata1$O3.Value[i],rdata1$PM10.Value[i],rdata1$Date.Time[i],rdata1$Air.Quality))
}
a = rbind(a,c(1,2,3,4,5))
source('~/Projects/College Assignments/RProject/rproject.R')
print(pie(rdata1$Air.Quality))
print(pie(table(rdata1$Air.Quality), names(table(rdata1$Air.Quality))))
print(pie(table(rdata1$Air.Quality), names(table(rdata1$Air.Quality)),main="Air Quality breakdown"))
